[tool.poetry]
name = "cxr-generation"
version = "0.1.0"
description = ""
authors = ["Rajat Rasal"]
readme = "README.md"
packages = [
    { include = "data", from = "src" },
    { include = "semantic_editing", from = "src" },
    { include = "ddpm", from = "src" },
    { include = "morphomnist", from = "src" },
    { include = "optimisers", from = "src" },
    { include = "counterfactuals", from = "src" },
    { include = "models", from = "src" }
]

[tool.poetry.scripts]
caption_imagenet = "dataset.imagenet_captioning:main"
laion_400m_download = "dataset.laion_400m:main"
laion_400m_embed = "dataset.clip:main"
format_reports = "data.mimic_cxr.create_section_files:cli"

machex_preprocessing = "data.machex.machex:main"

experiments = "semantic_editing.experiments:main"

colour_mnist = "datasets.mnist.colour:colour_mnist_with_fixed_saturation"
morphomnist = "data.morphomnist.create_datasets:main"
measure_mnist = "datasets.mnist.measure:measure_mnist"

measure_mnist_metadata = "datasets.mnist.measure:measure_mnist_metadata"
measure_morphomnist_metadata = "data.morphomnist.measure:measure_mnist"

mnist_train = "ddpm.scripts:mnist_train_unconditional"
mnist_test = "ddpm.scripts:mnist_test_unconditional"
mnist_train_guided = "ddpm.scripts:mnist_train_guided"
mnist_compositional = "ddpm.scripts:train_compositional_morphomnist"

mimic_train = "ddpm.scripts_mimic:train_guided"
mnist_train2 = "ddpm.scripts_mnist:train_guided"

mnist_editing = "ddpm.experiments:mnist_editing_visualisations"
mnist_editing_metrics = "ddpm.experiments:mnist_reconstruction_editability_curve"
measure_morphometrics = "ddpm.experiments:measure_morphometrics"

train_ae = "models.train_ae:main"

[tool.poetry.dependencies]
python = "3.9.18"
torch = "2.1.2"
diffusers = "0.30.0"
accelerate = "0.26.1"
pillow = "10.4.0"  # "9.3.0"
numpy = "1.26.3"
blobfile = "1.0.5"
# mpi4py = "3.1.6"
mpi4py-mpich = "3.1.5"
setuptools = "68.2.2"
matplotlib = "3.8.2"
pandas = "2.1.4"
tqdm = "4.66.3"
transformers = "4.36.2"
torchvision = "0.16.2"
torchmetrics = {extras = ["image"], version = "1.4.2"}
scikit-learn = "1.4.1.post1"
pytest = "8.0.1"
pytest-dependency = "0.6.0"
litdata = "0.2.3"
autofaiss = "^2.9.6"
# CLIP Retrieval needs TQDM > 4.66.3
# clip-retrieval = "2.44.0"
webdataset = "0.2.86"
notebook = "7.1.3"
lightning = "2.2.4"
tensorboard = "2.17.0"
# tensorboard = "2.16.2"
# wandb = "0.16.6"
# protobuf = "4.25.4"
protobuf = "3.20"
wandb = "0.16.6"
# stocaching = "0.2.1"
bkh-pytorch-utils = "0.9.3"
mediffusion = "0.7.1"
monai = "1.2.0"
pyro-ppl = "1.9.1"
imageio = "2.26.0"
h5py = "3.12.1"
tensorflow-datasets = "4.9.0"
# ema-pytorch = "0.7.7"
loguru = "^0.7.3"

[tool.poetry.group.gpu]
optional = true

[tool.poetry.group.gpu.dependencies]
bitsandbytes = "0.43.0"
triton = "2.1.0"
nvidia-cuda-nvrtc-cu12 = "12.1.105"
nvidia-cuda-runtime-cu12 = "12.1.105"
nvidia-cuda-cupti-cu12 = "12.1.105"
nvidia-cudnn-cu12 = "8.9.2.26"
nvidia-cublas-cu12 = "12.1.3.1"
nvidia-cufft-cu12 = "11.0.2.54"
nvidia-curand-cu12 = "10.3.2.106"
nvidia-cusolver-cu12 = "11.4.5.107"
nvidia-cusparse-cu12 = "12.1.0.106"
nvidia-nccl-cu12 = "2.18.1"
nvidia-nvtx-cu12 = "12.1.105"
nvidia-nvjitlink-cu12 = "12.3.52"

[build-system]
requires = ["poetry-core==1.7.*"]
build-backend = "poetry.core.masonry.api"

[virtualenvs]
path = ".venv"
